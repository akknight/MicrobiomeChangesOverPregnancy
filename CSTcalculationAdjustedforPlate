#LDM for CST prediction
#Removed ASVs that don't classify to the genus level 

#Projection Matrix

biom<-read.csv("table_122306162636466676970147_NosingletonNopersonton_011918.csv",as.is=T,row.names=1)
biom<-biom[,-1]
#transpose so that rows are samples
otu<-as.data.frame(t(biom),as.is=T)

#drop unclassifieds:
tax<-read.csv("RDPtaxatestnosingletonpersonton.csv",as.is=T)
tax<-tax[which(tax$V6!="NA"),]

otu1<-otu[,which(colnames(otu)%in%tax$ASV==T)]
#write.csv(otu1,file="table_122306162636466676970147_NosingletonNopersonton_011918_NOunclassified_032818.csv")
otu<-otu1

map<-read.csv("Meta_011918.csv",as.is=T,row.names=1,header=T)
map
map<-subset(map,map$Person!="G0202-1")
map<-subset(map,map$Person!="G0202-2")
map<-subset(map,map$Person!="G0060-1")
map<-subset(map,map$Person!="G0060-2")
#these are the old CSTs, but I needed this file to drop the duplicates.

map1<-map[rownames(map)%in%rownames(otu)==T,]
table(rownames(map1)==rownames(otu))

map2<-map1[order(rownames(map1)),]
otu2<-otu[order(rownames(otu)),]
table(rownames(map2)==rownames(otu2))


map2$A=(map2$Plate == "OM61")**2
map2$B=(map2$Plate == "OM62")**2
map2$C=(map2$Plate == "OM63")**2
map2$D = (map2$Plate == "OM122")**2
map2$E = (map2$Plate == "EIGC9_OM30")**2
map2$G= (map2$Plate == "OM64")**2
map2$H = (map2$Plate == "OM66-R")**2
map2$I = (map2$Plate == "OM69")**2
map2$J = (map2$Plate == "OM70")**2
map2$K = (map2$Plate == "OM147")**2

mapV<-subset(map2,map2$Site=="VagM1")
mapO<-subset(map2,map2$Site=="OraM1")
mapG<-subset(map2,map2$Site=="RecM1")
mapV<-subset(mapV,mapV$RemoveDup==0)


otuV<-otu2[rownames(otu2)%in%rownames(mapV)==T,]
table(rownames(otuV)==rownames(mapV))

#Have to remove OTUs with sum 0.
otuVa<-otuV[,colSums(otuV)>0]
library(LDM)



adj.data <- adjust.data.by.covariates(formula= ~ mapV$A+mapV$B+mapV$C+mapV$D+mapV$E+mapV$G+mapV$H+mapV$I+mapV$J, data=mapV,
                                      otu.table=otuVa, dist.method="bray")
PCs <- eigen(adj.data$adj.dist, symmetric=TRUE)


a<-as.data.frame(adj.data$adj.dist)
rownames(a)<-rownames(otuVa)
colnames(a)<-rownames(otuVa)

write.csv(a,file="AdjustedDistanceMatrix_032818.csv")

b<-as.data.frame(PCs$vectors)
rownames(b)<-rownames(otuVa)
write.csv(b,file="PCvectors_032818.csv")

##########################################
#Calculate Adjusted CSTs
##########################################

biom<-read.csv("table_122306162636466676970147_NosingletonNopersonton_011918_NOunclassified_032818.csv",as.is=T,row.names=1)
map<-read.csv("Meta_011918.csv",as.is=T,row.names=1,header=T)

biom<-biom[,-1]
library(phyloseq)
library("ggplot2")
library(igraph)
library(grid)

tax<-read.csv("RDPtaxatestnosingletonpersonton.csv",as.is=T)
tax<-tax[which(tax$V6!="NA"),]

biom<-as.matrix(biom)

biom<-biom[,order(colnames(biom))]
map<-map[order(rownames(map)),]
map<-subset(map,map$RemoveDup==0)
map<-subset(map,map$Site=="VagM1")
map<-subset(map,map$Person!="G0202-1")
map<-subset(map,map$Person!="G0202-2")
map<-subset(map,map$Person!="G0060-1")
map<-subset(map,map$Person!="G0060-2")

OTU = otu_table(biom, taxa_are_rows = F)
MAP=sample_data(map)


rownames(tax)<-tax$ASV
tax<-tax[,-1]
tax<-as.matrix(tax)

TAX=tax_table(tax)



physeq = phyloseq(OTU,MAP,TAX)

set.seed(300)
physeq = prune_samples(sample_data(physeq)$Site=="VagM1", physeq)

#ps <- transform_sample_counts(physeq, function(OTU) OTU/sum(OTU))

BD<-read.csv("PCvectors_032818.csv",as.is=T)
rownames(BD)<-BD$X

#MAKE SURE THEY'RE IN THE SAME ORDER.

table(rownames(BD)==sample_names(physeq))

samdat<-sample_data(physeq)
BD1<-BD[order(BD$X),]
BD1$X<-NULL
samdat<-samdat[order(rownames(samdat)),]


table(rownames(BD1)==rownames(samdat))

NDIM <- 7
x <- BD1[,1:NDIM]  # rows=sample, cols=MDS axes (PCs.), entries = value

#SUB IN VECTOR HERE.
pamPCoA = function(x, k) {
  list(cluster = pam(x[,1:2], k, cluster.only = TRUE))
}

library("cluster")
gs = clusGap(x, FUN = pamPCoA, K.max = 12, B = 50)
plot_clusgap(gs) + scale_x_continuous(breaks=c(seq(0, 12, 2)))
#Still 6
K <- 6
x <- BD1[,1:NDIM]
clust <- as.factor(pam(x, k=K, cluster.only=T))
# SWAPPING THE ASSIGNMENT OF 2 AND 3 TO MATCH RAVEL CST ENUMERATION
clust[clust==2] <- NA
clust[clust==3] <- 2
clust[is.na(clust)] <- 3
samdat$CST <- clust

write.csv(samdat,file="CST_nodups_nounclassified_032818.csv")


############################################################################

#AWS

ldm.formula <- otuVa ~ (mapV$A+mapV$B+mapV$C+mapV$D+mapV$E+mapV$G+mapV$H+mapV$I+mapV$J)

print(seed)

dir.create("tmp_files_VagCST_032818")
res_V <- ldm(formula=ldm.formula, dist.method="bray",cluster.id=map$Person, permute.within.clusters=TRUE,
                            test.global=TRUE, test.otu=F,outfile.prefix="tmp_files_VagCST_032818/tmp",
                            n.perm.max=500,seed=seed)

resVa<-as.data.frame(resV$x.freq)

save(resVa,file="resVa.Rdata")



for ((i=1;i<=20;i++))
  do
R CMD BATCH --no-save --no-restore "--args seed=${i} "  ldm_vagCST_032818.R &
  done 




#############################################################################
#heatmap


load("/Users/annaknight/Desktop/NewQiime2FREEZE_112017/JAN16Redo/ChangesOverPregnancy/AllSubjects_032718/resVa_032818.Rdata",verbose=T)
resVa<-as.matrix(resVa)
write.csv(resVa,file="resVa_032818.csv")
#relabel with Labels from RDP

resVa<-read.csv("resVa_032818_Labels.csv",as.is=T,row.names=1)

#colnames(resVa)<-resVa[1,]
#resVa<-resVa[-1,]
#resVa<-as.matrix(as.data.frame(resVa))
#write.csv(resVa,file="resVa_021218_Labels.csv")

#resVa<-read.csv("/Users/annaknight/Desktop/NewQiime2FREEZE_112017/JAN16Redo/NoDups_CSTS_031418/resVa_032818_labels.csv",as.is=T,row.names=1)
resVa<-as.matrix(resVa)


heatmap(resVa[1:15,1:15],col = cm.colors(100))

map<-read.csv("CST_nodups_nounclassified_032818.csv",as.is=T,row.names=1,header=T)

map1<-map[rownames(map)%in%rownames(resVa)==T,]

heatmap(resVa[1:15,1:15],col = cm.colors(100))

table(rownames(resVa)==rownames(map1))
resVa1<-resVa[order(rownames(resVa)),]

map2<-map1[order(rownames(map1)),]
table(rownames(resVa1)==rownames(map2))


sqresVa1<-resVa1^2

table(rownames(sqresVa1)==rownames(map2))

taxa.orderABS <- names(sort(colSums(sqresVa1),decreasing=T))

q<-colSums(sqresVa1)
q.norm.sorted=sort(q,decreasing=TRUE)/sum(q)
sum( q.norm.sorted[1:13] )
sum( q.norm.sorted[1:3] )

QN<-as.data.frame(q.norm.sorted)

#TO<-taxa.order[1:25]
#TOABS<-taxa.orderABS[1:25]
#forGLen
TOABS<-taxa.orderABS[1:13]

CST1<-resVa1[which(map2$CST==1),]
CST2<-resVa1[which(map2$CST==2),]
CST3<-resVa1[which(map2$CST==3),]
CST4<-resVa1[which(map2$CST==4),]
CST5<-resVa1[which(map2$CST==5),]
CST6<-resVa1[which(map2$CST==6),]


CST1a<-CST1[,which(colnames(CST1)%in%TOABS)]
CST2a<-CST2[,which(colnames(CST2)%in%TOABS)]
CST3a<-CST3[,which(colnames(CST3)%in%TOABS)]
CST4a<-CST4[,which(colnames(CST4)%in%TOABS)]
CST5a<-CST5[,which(colnames(CST5)%in%TOABS)]
CST6a<-CST6[,which(colnames(CST6)%in%TOABS)]

pdf("CSTsIndividual_NEW6_032818.pdf")
par(mfrow=c(2,3))
heatmap(CST1a,main="CST1")
heatmap(CST2a,main="CST2")
heatmap(CST3a,main="CST3")
heatmap(CST4a,main="CST4")
heatmap(CST5a,main="CST5")
heatmap(CST6a,main="CST6")

dev.off()


CSTS<-rbind(CST1a,CST2a,CST3a,CST4a,CST5a,CST6a)
CSTSt<-as.data.frame(t(CSTS),quote=F)
CSTSt<-as.matrix(CSTSt)


#heatmap.2(CSTS,col = cm.colors(100),Rowv=NA,trace="none")

Cmap<-merge(CSTS,map2,by.x="row.names",by.y="row.names")

Cmap$CSTColor<-Cmap$CST
Cmap$CSTColor<-ifelse(Cmap$CSTColor==1,"black",ifelse(Cmap$CSTColor==2, "blue",ifelse(Cmap$CSTColor==3,"green", ifelse(Cmap$CSTColor==4, "yellow",ifelse(Cmap$CSTColor==5, "red",ifelse(Cmap$CSTColor==6, "cyan",NA))))))


Cmap<-Cmap[order(Cmap$CST),]
table(rownames(CSTS)==Cmap$Row.names)
rownames(Cmap)<-Cmap$Row.names
Cmap1<-Cmap[,-1]
Cmapt<-as.data.frame(t(Cmap1),quote=F)


#heatmap.2(as.matrix(Cmap[,2:15]),dendrogram="none",Rowv=NA,Colv=NA,trace="none",RowSideColors=Cmap$CSTColor)

#transpose

CC<-as.data.frame(Cmapt[1:13,])
CC<-as.matrix(CC)
write.csv(CC,file="CCtest.csv")
CC<-read.csv("CCtest.csv",as.is=T,row.names=1)
CC<-merge(CC,QN,by="row.names")

CCo<-CC[order(CC$q.norm.sorted,decreasing=T),]
rownames(CCo)<-CCo$Row.names

CCoo<-as.data.frame(CCo[2:286],quote=F)

write.csv(CCoo,file="CCootest.csv")

CCoo<-read.csv("CCootest.csv",as.is=T,row.names=1)
#get rid of the q.norm.sorted column.

library(gplots)
library("RColorBrewer")
pdf("CSTsAll_032818_nodups_CST6_blue_ordered.pdf")
heatmap.2(as.matrix(CCoo),dendrogram="none",Rowv=NA,Colv=NA,margins = c(5, 12),labCol = NULL,trace="none",cexRow=.5,ColSideColors=Cmap$CSTColor,col=brewer.pal(9,"Blues"))
dev.off()


#heatmap.2(as.matrix(CCoo),dendrogram="none",Rowv=NA,Colv=NA,margins = c(5, 12),labCol = NULL,trace="none",cexRow=.5,ColSideColors=Cmap$CSTColor,col=brewer.pal(9,"Blues"))

